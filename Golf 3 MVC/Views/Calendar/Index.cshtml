@{
    //Layout = null;
    ViewBag.Title = "Bokningsschema";
    @model Golf_3_MVC.Models.CalendarBookings

}


<!DOCTYPE html>
<html>
<head>
    <title>Hållslaget GK</title>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script src="~/Scripts/jquery-3.1.1.js"></script>
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="medlemmar.js"></script>
    <style>
        body {
            background-color: #eee;
        }
    </style>
    <link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />
    <script src="~/Scripts/dist/sweetalert.min.js"></script>
    @*<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/smoothness/jquery-ui.css" />*@
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/site.js"></script>
    <script>
        $(document).ready(function () {
            $("#medlemsId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Calendar/GetAutoCompleteData",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.fornamn, value: item.efternamn, value: item.golf_id
                                }
                            }))
                        },
                        messages: {
                            noResults: "", results: ""
                        }
                    });
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#sokBokning").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Calendar/GetAutoCompleteDataBokning",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.text
                                }
                            }))
                        },
                        messages: {
                            noResults: "", results: ""
                        }
                    });

                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#sokBokning2").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Calendar/GetAutoCompleteDataBokning",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.text
                                }
                            }))
                        },
                        messages: {
                            noResults: "", results: ""
                        }
                    });
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#sokBokningM").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Calendar/GetAutoCompleteDataBokning",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.text
                                }
                            }))
                        },
                        messages: {
                            noResults: "", results: ""
                        }
                    });
                }
            });
        });
    </script>

</head>
<body>
    <div class="row">
        <ul class="nav nav-pills nav-stacked">

            @if (User.IsInRole("Personal") || User.IsInRole("Admin"))  // ENDAST FÖR PERSONAL OCH ADMIN
            {
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Säsong <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">

                        @using (Html.BeginForm("Seasontoggle", "Calendar"))
                        {
                            <p>
                                Öppna/Stäng: <input id="responsable" name="checkResp" value="true" type="checkbox" />
                                <br />
                                <input id="seasontogglebtn" type="submit" value="Bekräfta" />
                            </p>
                        }
                    </ul>
                </li>
                /////////////////////////////////////////
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Blockera tider <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">

                        <p>
                            För att blockera tider boka en golftid som vanligt och välj hur länge tiden ska vara blockerad.
                            Systemet identifierar av sig självt att det är en ny blockering och inte en ny bokning.
                        </p>


                    </ul>
                </li>
                /////////////////////////////////////////

                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Ta bort blocktider <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @using (Html.BeginForm("DeleteBlocktime", "Calendar"))
                        {
                            <p>
                                Välj bokning: @Html.DropDownList("BlocktimeBokningar", new SelectList(Model.allaBlocktimeBokningar, "id", "start_date"))

                                <input type="submit" name="tabort" value="Ta bort" />

                                @Html.Raw(TempData["msg"])
                            </p>
                        }

                    </ul>

                </li>
                /////////////////////////////////////////
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Lägg till/Ta bort person <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @using (Html.BeginForm("Create", "Calendar"))
                        {
                            <p>
                                Sök efter bokning: @Html.TextBox("sokBokning")
                            </p>
                            <p>
                                Sök efter medlem: @Html.TextBox("medlemsId")<br />
                                <input type="submit" name="laggtill" value="Lägg till" />
                                <input type="submit" name="tabort" value="Ta bort" />

                                @Html.Raw(TempData["msg"])
                            </p>
                        }
                    </ul>
                </li>

                /////////////////////////////////////////

                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Lägg till/ta bort gäst <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @using (Html.BeginForm("Create", "Calendar"))
                        {
                            <p>
                                Sök efter bokning: @Html.TextBox("sokBokning2")<br />
                                Skriv in gästens namn: @Html.TextBox("gast")<br /><br />

                                <input type="submit" name="laggtillGast" value="Lägg till" />
                                <input type="submit" name="tabortGast" value="Ta bort" />

                                @Html.Raw(TempData["msg"])
                            </p>
                        }
                    </ul>
                </li>
                /////////////////////////////////////////
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Incheckning <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @using (Html.BeginForm("Incheckning", "Calendar"))
                        {
                            <p>
                                &emsp;Välj bokning: &emsp;@Html.DropDownList("Bokningar", new SelectList(Model.allaBokningar.Where(x => x.start_date.ToShortDateString() == DateTime.Today.ToShortDateString() ), "id", "start_date"), new
                                                 {

                                                     onchange = @"Javascript:GetBokare();"

                                                 })

                                &emsp;
                                <hr /><label id="0">&emsp;<br />&emsp;</label><br />
                                <label style="display:none" id="10"><input type="checkbox" name="Check in?0" id="20" value="0" style="display:none" /> Checka in?</label>
                                <br /><label style="display:none" id="30"><input type="checkbox" name="SkrivUt" id="40" value="0" style="display:none" /> Skriv ut scorekort?</label>
                                <hr />
                                <label id="1">&emsp;<br />&emsp;</label><br />
                                <label style="display:none" id="11"><input type="checkbox" name="Check in?1" id="21" value="0" style="display:none" /> Checka in?</label>
                                <br /><label style="display:none" id="31"><input type="checkbox" name="SkrivUt" id="41" value="0" style="display:none" /> Skriv ut scorekort?</label>
                                <hr />
                                <label id="2">&emsp;<br />&emsp;</label><br />
                                <label style="display:none" id="12"><input type="checkbox" name="Check in?2" id="22" value="0" style="display:none" /> Checka in?</label>
                                <br /><label style="display:none" id="32"><input type="checkbox" name="SkrivUt" id="42" value="0" style="display:none" /> Skriv ut scorekort?</label>
                                <hr />
                                <label id="3">&emsp;<br />&emsp;</label><br />
                                <label style="display:none" id="13"><input type="checkbox" name="Check in?3" id="23" value="0" style="display:none" /> Checka in?</label>
                                <br /><label style="display:none" id="33"><input type="checkbox" name="SkrivUt" id="43" value="0" style="display:none" /> Skriv ut scorekort?</label>
                                <hr />

                                &emsp;<input type="submit" name="checkainBtn" value="Checka in" onclick="Javascript:SeCheck();" />

                                @*@Html.Raw(TempData["msg"])*@
                            </p>
                        }

                    </ul>

                </li>


            }

            else
            {
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Boka in dig själv<span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @using (Html.BeginForm("CreateMedlem", "Calendar"))
                        {
                            <p>
                                Sök efter bokning: @Html.TextBox("sokBokningM")
                            </p>                      
                                <input type="submit" name="bokaInDig" value="Boka in dig" />

                                @Html.Raw(TempData["msg"])
                        }
                    </ul>
                </li>
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
                        Lägg till/Ta bort person <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @using (Html.BeginForm("CreateMedlem", "Calendar"))
                        {
                            <p>
                                Välj bokning:<br /> @Html.DropDownList("Bokningar", new SelectList(Model.minaBokningar, "id", "start_date"))
                            </p>
                            <p>
                                Skriv in golfID/gästnamn: @Html.TextBox("golfidstring")<br /><br />
                                Är personen en gäst? @Html.CheckBox("checkbox", "false")<br /><br />
                                <input type="submit" name="laggtill" value="Lägg till" />
                                <input type="submit" name="tabort" value="Ta bort" />

                                @Html.Raw(TempData["msg"])
                            </p>
                        }
                    </ul>
                </li>
                /////////////////////////////////////////
            }

        </ul>


        <div class="panel panel-default panel-kalender">
            <div class="panel-heading">Bokningsschema</div>
            <div class="panel-body">
                <div style="height:1550px;width:auto;margin:0 auto">

                    @Html.Raw(Model.sched.Render())
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        function GetBokare()
        {
            var e = document.getElementById("Bokningar");
            var bokID = e.options[e.selectedIndex].value;

            var json1 = @Html.Raw(Json.Encode(Model.medbokareLista.ToList()));

            var json2 = @Html.Raw(Json.Encode(Model.medlemsLista.Select(x => new {
                           efternamn = x.efternamn,
                           fornamn = x.fornamn,
                           golf_id= x.golf_id
                       }
                          )));

            var räknare = 0;
            var räknare2 = 10;
            var räknare3 = 20;
            var räknare4 = 30;
            var räknare5 = 40;

            for (var i = 0; i < 3; i++) {
                document.getElementById(räknare).innerText ="";
                document.getElementById(räknare2).style = "display:none";
                document.getElementById(räknare3).style = "display:none";
                document.getElementById(räknare4).style = "display:none";
                document.getElementById(räknare5).style = "display:none";
                räknare++;
                räknare2++;
                räknare3++;
                räknare4++;
                räknare5++;
            }

             räknare = 0;
             räknare2 = 10;
             räknare3 = 20;
             räknare4 = 30;
             räknare5 = 40;
    


            for (var i = 0; i < Object.keys(json1).length; i++)
            {
                if (json1[i].BokningsId == bokID)
                {
                    for(var x = 0; x< Object.keys(json2).length; x++)
                    {
                        if (json2[x].golf_id == json1[i].Medbokare1)
                        {
                            document.getElementById(räknare).innerText ="Spelare: " + json2[x].fornamn + " " + json2[x].efternamn;
                            document.getElementById(räknare3).value = json1[i].Medbokare1; //Checkbox checka in
                            document.getElementById(räknare5).value = json1[i].Medbokare1; //checkbox skriv ut
                            document.getElementById(räknare2).style = "display:normal";
                            document.getElementById(räknare3).style = "display:normal";
                            document.getElementById(räknare4).style = "display:normal";
                            document.getElementById(räknare5).style = "display:normal";

                            if (json1[i].incheckad == true)
                            {
                                document.getElementById(räknare3).checked = "checked";
                                document.getElementById(räknare3).disabled = "disabled";

                            }

                            räknare++;
                            räknare2++;
                            räknare3++;
                            räknare4++;
                            räknare5++;
                        }
                    }
                    if (json1[i].gast == true)
                    {

                        document.getElementById(räknare).innerText ="Spelare: " + json1[i].Medbokare1;
                        document.getElementById(räknare3).value = json1[i].Medbokare1; //Checkbox checka in
                        document.getElementById(räknare5).value = json1[i].Medbokare1; //checkbox skriv ut
                        document.getElementById(räknare2).style = "display:normal";
                        document.getElementById(räknare3).style = "display:normal";
                        document.getElementById(räknare4).style = "display:normal";
                        document.getElementById(räknare5).style = "display:normal";

                        if (json1[i].incheckad == true)
                        {
                            document.getElementById(räknare3).checked = "checked";
                            document.getElementById(räknare3).disabled = "disabled";

                        }
                        räknare++;
                        räknare2++;
                        räknare3++;
                        räknare4++;
                        räknare5++;
                        
                    }
                }

            }
            räknare =0;
        }
    </script>

    <script type="text/javascript">
            function SeCheck()
            {
                if (document.getElementById("20").checked)
                {
                    document.getElementById("20").name = "Checked1";
                }
                if (document.getElementById("21").checked)
                {
                    document.getElementById("21").name = "Checked2";
                }
                if (document.getElementById("22").checked)
                {
                    document.getElementById("22").name = "Checked3";
                }
                if (document.getElementById("23").checked)
                {
                    document.getElementById("23").name = "Checked4";
                }

                if (document.getElementById("40").checked)
                {
                    document.getElementById("40").name = "C1";
                    window.open("scorekorts/scorekort?bokningsID="+ document.getElementById("Bokningar").value +"&golfID=" + document.getElementById("40").value)
                }
                if (document.getElementById("41").checked)
                {
                    document.getElementById("41").name = "C2";
                    window.open("scorekorts/scorekort?bokningsID="+ document.getElementById("Bokningar").value +"&golfID=" + document.getElementById("41").value)
                }
                if (document.getElementById("42").checked)
                {
                    document.getElementById("42").name = "C3";
                    window.open("scorekorts/scorekort?bokningsID="+ document.getElementById("Bokningar").value +"&golfID=" + document.getElementById("42").value)
                }
                if (document.getElementById("43").checked)
                {
                    document.getElementById("43").name = "C4";
                    window.open("scorekorts/scorekort?bokningsID="+ document.getElementById("Bokningar").value +"&golfID=" + document.getElementById("43").value)
                }
                if(document.getElementById("20").checked || document.getElementById("21").checked || document.getElementById("22").checked || document.getElementById("23").checked)
                {
                    alert("Incheckningen lyckades");
                }
            }
    </script>
</body>
</html>
